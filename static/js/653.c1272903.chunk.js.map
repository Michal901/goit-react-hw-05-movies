{"version":3,"file":"static/js/653.c1272903.chunk.js","mappings":"gLAGO,MAAMA,EAAcC,IAAiC,IAAhC,IAAEC,EAAG,SAAEC,EAAQ,QAAEC,GAASH,EACpD,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAqBvC,OAnBAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAUT,GAE/BE,EADe,YAAbD,EACMO,EAASE,KAAKC,QACA,SAAbV,EACDO,EAASE,KAAKE,KAEdJ,EAASE,MAEnBN,GAAW,EAGb,CAFE,MAAOS,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAEFE,EAAW,GACV,CAACf,EAAKE,EAASD,IAEdE,GACKa,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGP,IAAI,C,mFC5Bb,QAAgC,8B,aCKzB,MAAMC,EAASA,KACpB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAQC,IAAalB,EAAAA,EAAAA,UAAS,KAC9BmB,EAAWC,IAAgBpB,EAAAA,EAAAA,WAAS,GAU3C,OACEqB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBX,SAAA,CAClCO,IACCR,EAAAA,EAAAA,KAAClB,EAAAA,EAAW,CACVE,IAAG,qDAAA6B,OAAuDC,EAAAA,EAAO,WAAAD,OAAUV,EAAaY,IACtF,UAEF9B,SAAS,UACTC,QAASqB,KAGbP,EAAAA,EAAAA,KAAA,SACEgB,SAAUC,IACRb,EAAgB,CAAEc,MAAOD,EAAEE,OAAOC,OAAQ,EAE5CC,KAAK,UAEPrB,EAAAA,EAAAA,KAAA,UAAQsB,QAzBSC,KACnBd,GAAa,GAEbe,YAAW,KACTf,GAAa,EAAM,GAClB,IAAI,EAoByBR,SAAC,YAC/BD,EAAAA,EAAAA,KAAA,MAAAC,SACGK,EAAOmB,KAAIC,IACV1B,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,GAAE,WAAAf,OAAaa,EAAMG,IAAK5B,SAAEyB,EAAMI,OAASJ,EAAMK,QADhDL,EAAMG,UAKf,C,gCC5CH,MAAMf,EAAU,kC","sources":["components/DataFetcher/DataFetcher.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","constants/API_KEY/ApiKey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const DataFetcher = ({ url, dataType, setData }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(url);\n        if (dataType === 'results') {\n          setData(response.data.results);\n        } else if (dataType === 'cast') {\n          setData(response.data.cast);\n        } else {\n          setData(response.data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [url, setData, dataType]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesWrapper\":\"Movies_moviesWrapper__3DH6J\"};","import { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { DataFetcher } from 'components/DataFetcher/DataFetcher';\nimport { API_KEY } from 'constants/API_KEY/ApiKey';\nimport styles from './Movies.module.css';\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [searching, setSearching] = useState(false);\n\n  const handleSearch = () => {\n    setSearching(true);\n\n    setTimeout(() => {\n      setSearching(false);\n    }, 500);\n  };\n\n  return (\n    <div className={styles.moviesWrapper}>\n      {searching && (\n        <DataFetcher\n          url={`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchParams.get(\n            'query'\n          )}`}\n          dataType=\"results\"\n          setData={setMovies}\n        />\n      )}\n      <input\n        onChange={e => {\n          setSearchParams({ query: e.target.value });\n        }}\n        type=\"text\"\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title || movie.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const API_KEY = '3e82467d5ce14883b35275ee23bc002f';\n"],"names":["DataFetcher","_ref","url","dataType","setData","loading","setLoading","useState","useEffect","async","response","axios","data","results","cast","error","console","fetchData","_jsx","children","Movies","searchParams","setSearchParams","useSearchParams","movies","setMovies","searching","setSearching","_jsxs","className","styles","concat","API_KEY","get","onChange","e","query","target","value","type","onClick","handleSearch","setTimeout","map","movie","Link","to","id","title","name"],"sourceRoot":""}