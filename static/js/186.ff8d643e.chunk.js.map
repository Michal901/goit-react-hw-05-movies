{"version":3,"file":"static/js/186.ff8d643e.chunk.js","mappings":"gLAGO,MAAMA,EAAcC,IAAiC,IAAhC,IAAEC,EAAG,SAAEC,EAAQ,QAAEC,GAASH,EACpD,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAqBvC,OAnBAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAUT,GAE/BE,EADe,YAAbD,EACMO,EAASE,KAAKC,QACA,SAAbV,EACDO,EAASE,KAAKE,KAEdJ,EAASE,MAEnBN,GAAW,EAGb,CAFE,MAAOS,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAEFE,EAAW,GACV,CAACf,EAAKE,EAASD,IAEdE,GACKa,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGP,IAAI,C,8FCxBN,MAAMC,EAAUA,KACrB,MAAOC,EAAcC,IAAmBf,EAAAA,EAAAA,UAAS,OAC3C,QAAEgB,IAAYC,EAAAA,EAAAA,MAEpB,OACEC,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJD,EAAAA,EAAAA,KAAClB,EAAAA,EAAW,CACVE,IAAG,sCAAAwB,OAAwCH,EAAO,qBAAAG,OAAoBC,EAAAA,GACtEvB,QAASkB,EACTnB,SAAS,YAEVkB,IACCH,EAAAA,EAAAA,KAAA,MAAAC,SACGE,EAAaO,OAAS,EACrBP,EAAaQ,KAAIC,IACfL,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKW,EAAMC,UACXb,EAAAA,EAAAA,KAAA,KAAAC,SAAIW,EAAME,YAFHF,EAAMG,OAMjBf,EAAAA,EAAAA,KAAA,MAAAC,SAAI,2BAITH,QAAQkB,IAAIb,KACT,C,gCChCH,MAAMM,EAAU,kC","sources":["components/DataFetcher/DataFetcher.jsx","components/Reviews/Reviews.jsx","constants/API_KEY/ApiKey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const DataFetcher = ({ url, dataType, setData }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(url);\n        if (dataType === 'results') {\n          setData(response.data.results);\n        } else if (dataType === 'cast') {\n          setData(response.data.cast);\n        } else {\n          setData(response.data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [url, setData, dataType]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return null;\n};\n","import React, { useState } from 'react';\nimport { DataFetcher } from '../DataFetcher/DataFetcher';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY } from 'constants/API_KEY/ApiKey';\n\nexport const Reviews = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <h1>Movie Reviews</h1>\n      <DataFetcher\n        url={`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`}\n        setData={setMovieDetails}\n        dataType=\"results\"\n      />\n      {movieDetails && (\n        <ul>\n          {movieDetails.length > 0 ? (\n            movieDetails.map(movie => (\n              <li key={movie.id}>\n                <h4>{movie.author}</h4>\n                <p>{movie.content}</p>\n              </li>\n            ))\n          ) : (\n            <li>There are no reviews</li>\n          )}\n        </ul>\n      )}\n      {console.log(movieDetails)}\n    </div>\n  );\n};\n","export const API_KEY = '3e82467d5ce14883b35275ee23bc002f';\n"],"names":["DataFetcher","_ref","url","dataType","setData","loading","setLoading","useState","useEffect","async","response","axios","data","results","cast","error","console","fetchData","_jsx","children","Reviews","movieDetails","setMovieDetails","movieId","useParams","_jsxs","concat","API_KEY","length","map","movie","author","content","id","log"],"sourceRoot":""}